var documenterSearchIndex = {"docs":
[{"location":"gevrey/","page":"Gevrey","title":"Gevrey","text":"Modules = [Trapla]\nPages   = [\"gevrey.jl\"]\nOrder   = [:type, :function, ]\nPrivate = false","category":"page"},{"location":"gevrey/#Trapla.pulsebell-Tuple{Real,Real}","page":"Gevrey","title":"Trapla.pulsebell","text":"Bell-shaped pulse function Omega_omega T(t)\n\nt : actual time\n\nT : final time\n\nω : steepness factor of trajectory\n\n\n\n\n\n","category":"method"},{"location":"gevrey/#Trapla.smoothjump-Tuple{Real,Real}","page":"Gevrey","title":"Trapla.smoothjump","text":"Smooth jump function Phi_omega T(t)\n\nReturns a planned trajectory.\n\nsmoothjump(t :: Real, T:: Real; ω = 2.0 :: Real)\n\nt : actual time\n\nT : final time\n\nω : steepness factor of trajectory\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Trapla","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Trapla is a Julia package to design feed-forward control laws. At the moment only one method using Gevrey functions as described on Wikipedia is implemented.","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A steepness coefficient omega = 3 and a final time T = 10 is considered.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Trapla\n\nT = 10.0;\ntspan = 0. : 0.1 : 10.;\n\ny = smoothjump.(tspan, T; ω = 3.0)\n# output\n101-element Vector{Float64}:\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n ⋮\n 0.9999999999999984\n 1.000000000000004\n 0.9999999999999967\n 0.9999999999999989\n 1.0000000000000056\n 1.0000000000000016\n 1.0000000000000033\n 1.0000000000000038\n 0.9999999999999967\n 1.0000000000000002\n 1.0","category":"page"}]
}
